{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = exports.modes = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _Transition = require(\"./Transition\");\n\nvar _TransitionGroupContext = _interopRequireDefault(require(\"./TransitionGroupContext\"));\n\nvar _leaveRenders, _enterRenders;\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction areChildrenDifferent(oldChildren, newChildren) {\n  if (oldChildren === newChildren) return false;\n\n  if (_react.default.isValidElement(oldChildren) && _react.default.isValidElement(newChildren) && oldChildren.key != null && oldChildren.key === newChildren.key) {\n    return false;\n  }\n\n  return true;\n}\n/**\n * Enum of modes for SwitchTransition component\n * @enum { string }\n */\n\n\nvar modes = {\n  out: 'out-in',\n  in: 'in-out'\n};\nexports.modes = modes;\n\nvar callHook = function callHook(element, name, cb) {\n  return function () {\n    var _element$props;\n\n    element.props[name] && (_element$props = element.props)[name].apply(_element$props, arguments);\n    cb();\n  };\n};\n\nvar leaveRenders = (_leaveRenders = {}, _leaveRenders[modes.out] = function (_ref) {\n  var current = _ref.current,\n      changeState = _ref.changeState;\n  return _react.default.cloneElement(current, {\n    in: false,\n    onExited: callHook(current, 'onExited', function () {\n      changeState(_Transition.ENTERING, null);\n    })\n  });\n}, _leaveRenders[modes.in] = function (_ref2) {\n  var current = _ref2.current,\n      changeState = _ref2.changeState,\n      children = _ref2.children;\n  return [current, _react.default.cloneElement(children, {\n    in: true,\n    onEntered: callHook(children, 'onEntered', function () {\n      changeState(_Transition.ENTERING);\n    })\n  })];\n}, _leaveRenders);\nvar enterRenders = (_enterRenders = {}, _enterRenders[modes.out] = function (_ref3) {\n  var children = _ref3.children,\n      changeState = _ref3.changeState;\n  return _react.default.cloneElement(children, {\n    in: true,\n    onEntered: callHook(children, 'onEntered', function () {\n      changeState(_Transition.ENTERED, _react.default.cloneElement(children, {\n        in: true\n      }));\n    })\n  });\n}, _enterRenders[modes.in] = function (_ref4) {\n  var current = _ref4.current,\n      children = _ref4.children,\n      changeState = _ref4.changeState;\n  return [_react.default.cloneElement(current, {\n    in: false,\n    onExited: callHook(current, 'onExited', function () {\n      changeState(_Transition.ENTERED, _react.default.cloneElement(children, {\n        in: true\n      }));\n    })\n  }), _react.default.cloneElement(children, {\n    in: true\n  })];\n}, _enterRenders);\n/**\n * A transition component inspired by the [vue transition modes](https://vuejs.org/v2/guide/transitions.html#Transition-Modes).\n * You can use it when you want to control the render between state transitions.\n * Based on the selected mode and the child's key which is the `Transition` or `CSSTransition` component, the `SwitchTransition` makes a consistent transition between them.\n *\n * If the `out-in` mode is selected, the `SwitchTransition` waits until the old child leaves and then inserts a new child.\n * If the `in-out` mode is selected, the `SwitchTransition` inserts a new child first, waits for the new child to enter and then removes the old child.\n *\n * **Note**: If you want the animation to happen simultaneously\n * (that is, to have the old child removed and a new child inserted **at the same time**),\n * you should use\n * [`TransitionGroup`](https://reactcommunity.org/react-transition-group/transition-group)\n * instead.\n *\n * ```jsx\n * function App() {\n *  const [state, setState] = useState(false);\n *  return (\n *    <SwitchTransition>\n *      <CSSTransition\n *        key={state ? \"Goodbye, world!\" : \"Hello, world!\"}\n *        addEndListener={(node, done) => node.addEventListener(\"transitionend\", done, false)}\n *        classNames='fade'\n *      >\n *        <button onClick={() => setState(state => !state)}>\n *          {state ? \"Goodbye, world!\" : \"Hello, world!\"}\n *        </button>\n *      </CSSTransition>\n *    </SwitchTransition>\n *  );\n * }\n * ```\n *\n * ```css\n * .fade-enter{\n *    opacity: 0;\n * }\n * .fade-exit{\n *    opacity: 1;\n * }\n * .fade-enter-active{\n *    opacity: 1;\n * }\n * .fade-exit-active{\n *    opacity: 0;\n * }\n * .fade-enter-active,\n * .fade-exit-active{\n *    transition: opacity 500ms;\n * }\n * ```\n */\n\nvar SwitchTransition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(SwitchTransition, _React$Component);\n\n  function SwitchTransition() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.state = {\n      status: _Transition.ENTERED,\n      current: null\n    };\n    _this.appeared = false;\n\n    _this.changeState = function (status, current) {\n      if (current === void 0) {\n        current = _this.state.current;\n      }\n\n      _this.setState({\n        status: status,\n        current: current\n      });\n    };\n\n    return _this;\n  }\n\n  var _proto = SwitchTransition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.appeared = true;\n  };\n\n  SwitchTransition.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {\n    if (props.children == null) {\n      return {\n        current: null\n      };\n    }\n\n    if (state.status === _Transition.ENTERING && props.mode === modes.in) {\n      return {\n        status: _Transition.ENTERING\n      };\n    }\n\n    if (state.current && areChildrenDifferent(state.current, props.children)) {\n      return {\n        status: _Transition.EXITING\n      };\n    }\n\n    return {\n      current: _react.default.cloneElement(props.children, {\n        in: true\n      })\n    };\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        mode = _this$props.mode,\n        _this$state = this.state,\n        status = _this$state.status,\n        current = _this$state.current;\n    var data = {\n      children: children,\n      current: current,\n      changeState: this.changeState,\n      status: status\n    };\n    var component;\n\n    switch (status) {\n      case _Transition.ENTERING:\n        component = enterRenders[mode](data);\n        break;\n\n      case _Transition.EXITING:\n        component = leaveRenders[mode](data);\n        break;\n\n      case _Transition.ENTERED:\n        component = current;\n    }\n\n    return /*#__PURE__*/_react.default.createElement(_TransitionGroupContext.default.Provider, {\n      value: {\n        isMounting: !this.appeared\n      }\n    }, component);\n  };\n\n  return SwitchTransition;\n}(_react.default.Component);\n\nSwitchTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Transition modes.\n   * `out-in`: Current element transitions out first, then when complete, the new element transitions in.\n   * `in-out`: New element transitions in first, then when complete, the current element transitions out.\n   *\n   * @type {'out-in'|'in-out'}\n   */\n  mode: _propTypes.default.oneOf([modes.in, modes.out]),\n\n  /**\n   * Any `Transition` or `CSSTransition` component.\n   */\n  children: _propTypes.default.oneOfType([_propTypes.default.element.isRequired])\n} : {};\nSwitchTransition.defaultProps = {\n  mode: modes.out\n};\nvar _default = SwitchTransition;\nexports.default = _default;","map":{"version":3,"sources":["/Volumes/BlackSSD/WorkSpace/hausboot/client/node_modules/react-transition-group/cjs/SwitchTransition.js"],"names":["exports","__esModule","default","modes","_react","_interopRequireDefault","require","_propTypes","_Transition","_TransitionGroupContext","_leaveRenders","_enterRenders","obj","_inheritsLoose","subClass","superClass","prototype","Object","create","constructor","__proto__","areChildrenDifferent","oldChildren","newChildren","isValidElement","key","out","in","callHook","element","name","cb","_element$props","props","apply","arguments","leaveRenders","_ref","current","changeState","cloneElement","onExited","ENTERING","_ref2","children","onEntered","enterRenders","_ref3","ENTERED","_ref4","SwitchTransition","_React$Component","_this","_len","length","args","Array","_key","call","concat","state","status","appeared","setState","_proto","componentDidMount","getDerivedStateFromProps","mode","EXITING","render","_this$props","_this$state","data","component","createElement","Provider","value","isMounting","Component","propTypes","process","env","NODE_ENV","oneOf","oneOfType","isRequired","defaultProps","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = exports.modes = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _Transition = require(\"./Transition\");\n\nvar _TransitionGroupContext = _interopRequireDefault(require(\"./TransitionGroupContext\"));\n\nvar _leaveRenders, _enterRenders;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nfunction areChildrenDifferent(oldChildren, newChildren) {\n  if (oldChildren === newChildren) return false;\n\n  if (_react.default.isValidElement(oldChildren) && _react.default.isValidElement(newChildren) && oldChildren.key != null && oldChildren.key === newChildren.key) {\n    return false;\n  }\n\n  return true;\n}\n/**\n * Enum of modes for SwitchTransition component\n * @enum { string }\n */\n\n\nvar modes = {\n  out: 'out-in',\n  in: 'in-out'\n};\nexports.modes = modes;\n\nvar callHook = function callHook(element, name, cb) {\n  return function () {\n    var _element$props;\n\n    element.props[name] && (_element$props = element.props)[name].apply(_element$props, arguments);\n    cb();\n  };\n};\n\nvar leaveRenders = (_leaveRenders = {}, _leaveRenders[modes.out] = function (_ref) {\n  var current = _ref.current,\n      changeState = _ref.changeState;\n  return _react.default.cloneElement(current, {\n    in: false,\n    onExited: callHook(current, 'onExited', function () {\n      changeState(_Transition.ENTERING, null);\n    })\n  });\n}, _leaveRenders[modes.in] = function (_ref2) {\n  var current = _ref2.current,\n      changeState = _ref2.changeState,\n      children = _ref2.children;\n  return [current, _react.default.cloneElement(children, {\n    in: true,\n    onEntered: callHook(children, 'onEntered', function () {\n      changeState(_Transition.ENTERING);\n    })\n  })];\n}, _leaveRenders);\nvar enterRenders = (_enterRenders = {}, _enterRenders[modes.out] = function (_ref3) {\n  var children = _ref3.children,\n      changeState = _ref3.changeState;\n  return _react.default.cloneElement(children, {\n    in: true,\n    onEntered: callHook(children, 'onEntered', function () {\n      changeState(_Transition.ENTERED, _react.default.cloneElement(children, {\n        in: true\n      }));\n    })\n  });\n}, _enterRenders[modes.in] = function (_ref4) {\n  var current = _ref4.current,\n      children = _ref4.children,\n      changeState = _ref4.changeState;\n  return [_react.default.cloneElement(current, {\n    in: false,\n    onExited: callHook(current, 'onExited', function () {\n      changeState(_Transition.ENTERED, _react.default.cloneElement(children, {\n        in: true\n      }));\n    })\n  }), _react.default.cloneElement(children, {\n    in: true\n  })];\n}, _enterRenders);\n/**\n * A transition component inspired by the [vue transition modes](https://vuejs.org/v2/guide/transitions.html#Transition-Modes).\n * You can use it when you want to control the render between state transitions.\n * Based on the selected mode and the child's key which is the `Transition` or `CSSTransition` component, the `SwitchTransition` makes a consistent transition between them.\n *\n * If the `out-in` mode is selected, the `SwitchTransition` waits until the old child leaves and then inserts a new child.\n * If the `in-out` mode is selected, the `SwitchTransition` inserts a new child first, waits for the new child to enter and then removes the old child.\n *\n * **Note**: If you want the animation to happen simultaneously\n * (that is, to have the old child removed and a new child inserted **at the same time**),\n * you should use\n * [`TransitionGroup`](https://reactcommunity.org/react-transition-group/transition-group)\n * instead.\n *\n * ```jsx\n * function App() {\n *  const [state, setState] = useState(false);\n *  return (\n *    <SwitchTransition>\n *      <CSSTransition\n *        key={state ? \"Goodbye, world!\" : \"Hello, world!\"}\n *        addEndListener={(node, done) => node.addEventListener(\"transitionend\", done, false)}\n *        classNames='fade'\n *      >\n *        <button onClick={() => setState(state => !state)}>\n *          {state ? \"Goodbye, world!\" : \"Hello, world!\"}\n *        </button>\n *      </CSSTransition>\n *    </SwitchTransition>\n *  );\n * }\n * ```\n *\n * ```css\n * .fade-enter{\n *    opacity: 0;\n * }\n * .fade-exit{\n *    opacity: 1;\n * }\n * .fade-enter-active{\n *    opacity: 1;\n * }\n * .fade-exit-active{\n *    opacity: 0;\n * }\n * .fade-enter-active,\n * .fade-exit-active{\n *    transition: opacity 500ms;\n * }\n * ```\n */\n\nvar SwitchTransition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(SwitchTransition, _React$Component);\n\n  function SwitchTransition() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.state = {\n      status: _Transition.ENTERED,\n      current: null\n    };\n    _this.appeared = false;\n\n    _this.changeState = function (status, current) {\n      if (current === void 0) {\n        current = _this.state.current;\n      }\n\n      _this.setState({\n        status: status,\n        current: current\n      });\n    };\n\n    return _this;\n  }\n\n  var _proto = SwitchTransition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.appeared = true;\n  };\n\n  SwitchTransition.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {\n    if (props.children == null) {\n      return {\n        current: null\n      };\n    }\n\n    if (state.status === _Transition.ENTERING && props.mode === modes.in) {\n      return {\n        status: _Transition.ENTERING\n      };\n    }\n\n    if (state.current && areChildrenDifferent(state.current, props.children)) {\n      return {\n        status: _Transition.EXITING\n      };\n    }\n\n    return {\n      current: _react.default.cloneElement(props.children, {\n        in: true\n      })\n    };\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        mode = _this$props.mode,\n        _this$state = this.state,\n        status = _this$state.status,\n        current = _this$state.current;\n    var data = {\n      children: children,\n      current: current,\n      changeState: this.changeState,\n      status: status\n    };\n    var component;\n\n    switch (status) {\n      case _Transition.ENTERING:\n        component = enterRenders[mode](data);\n        break;\n\n      case _Transition.EXITING:\n        component = leaveRenders[mode](data);\n        break;\n\n      case _Transition.ENTERED:\n        component = current;\n    }\n\n    return /*#__PURE__*/_react.default.createElement(_TransitionGroupContext.default.Provider, {\n      value: {\n        isMounting: !this.appeared\n      }\n    }, component);\n  };\n\n  return SwitchTransition;\n}(_react.default.Component);\n\nSwitchTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Transition modes.\n   * `out-in`: Current element transitions out first, then when complete, the new element transitions in.\n   * `in-out`: New element transitions in first, then when complete, the current element transitions out.\n   *\n   * @type {'out-in'|'in-out'}\n   */\n  mode: _propTypes.default.oneOf([modes.in, modes.out]),\n\n  /**\n   * Any `Transition` or `CSSTransition` component.\n   */\n  children: _propTypes.default.oneOfType([_propTypes.default.element.isRequired])\n} : {};\nSwitchTransition.defaultProps = {\n  mode: modes.out\n};\nvar _default = SwitchTransition;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}