{"ast":null,"code":"import request from 'superagent';\nimport { API_KEY, CALENDAR_ID } from './base';\nlet GOOGLE_CALENDAR_URL = `https://www.googleapis.com/calendar/v3/calendars/${CALENDAR_ID}/events?key=${API_KEY}`;\nexport function getEvents(callback) {\n  request.get(GOOGLE_CALENDAR_URL).end((err, resp) => {\n    if (!err) {\n      const events = [];\n      JSON.parse(resp.text).items.map(event => {\n        return events.push({\n          start: new Date(event.start.dateTime.toString()),\n          end: new Date(event.end.dateTime.toString()),\n          title: event.summary\n        });\n      });\n      callback(events);\n    }\n  });\n}","map":{"version":3,"sources":["/Users/djsicrip/Documents/WorkSpace/hausboot/client/src/fetch.js"],"names":["request","API_KEY","CALENDAR_ID","GOOGLE_CALENDAR_URL","getEvents","callback","get","end","err","resp","events","JSON","parse","text","items","map","event","push","start","Date","dateTime","toString","title","summary"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,YAApB;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,QAArC;AAEA,IAAIC,mBAAmB,GAAI,oDAAmDD,WAAY,eAAcD,OAAQ,EAAhH;AAEA,OAAO,SAASG,SAAT,CAAmBC,QAAnB,EAA6B;AACnCL,EAAAA,OAAO,CAACM,GAAR,CAAYH,mBAAZ,EAAiCI,GAAjC,CAAqC,CAACC,GAAD,EAAMC,IAAN,KAAe;AACnD,QAAI,CAACD,GAAL,EAAU;AACT,YAAME,MAAM,GAAG,EAAf;AACAC,MAAAA,IAAI,CAACC,KAAL,CAAWH,IAAI,CAACI,IAAhB,EAAsBC,KAAtB,CAA4BC,GAA5B,CAAiCC,KAAD,IAAW;AAC1C,eAAON,MAAM,CAACO,IAAP,CAAY;AAClBC,UAAAA,KAAK,EAAE,IAAIC,IAAJ,CAASH,KAAK,CAACE,KAAN,CAAYE,QAAZ,CAAqBC,QAArB,EAAT,CADW;AAElBd,UAAAA,GAAG,EAAE,IAAIY,IAAJ,CAASH,KAAK,CAACT,GAAN,CAAUa,QAAV,CAAmBC,QAAnB,EAAT,CAFa;AAGlBC,UAAAA,KAAK,EAAEN,KAAK,CAACO;AAHK,SAAZ,CAAP;AAKA,OAND;AAOAlB,MAAAA,QAAQ,CAACK,MAAD,CAAR;AACA;AACD,GAZD;AAaA","sourcesContent":["import request from 'superagent';\nimport { API_KEY, CALENDAR_ID } from './base';\n\nlet GOOGLE_CALENDAR_URL = `https://www.googleapis.com/calendar/v3/calendars/${CALENDAR_ID}/events?key=${API_KEY}`;\n\nexport function getEvents(callback) {\n\trequest.get(GOOGLE_CALENDAR_URL).end((err, resp) => {\n\t\tif (!err) {\n\t\t\tconst events = [];\n\t\t\tJSON.parse(resp.text).items.map((event) => {\n\t\t\t\treturn events.push({\n\t\t\t\t\tstart: new Date(event.start.dateTime.toString()),\n\t\t\t\t\tend: new Date(event.end.dateTime.toString()),\n\t\t\t\t\ttitle: event.summary,\n\t\t\t\t});\n\t\t\t});\n\t\t\tcallback(events);\n\t\t}\n\t});\n}\n"]},"metadata":{},"sourceType":"module"}