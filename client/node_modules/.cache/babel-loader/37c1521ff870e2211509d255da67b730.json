{"ast":null,"code":"var _jsxFileName = \"/Users/djsicrip/Documents/WorkSpace/hausboot/client/src/pages/hausboot-rot/hausboot-rot.component.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { getEvents } from '../../fetch';\nimport _ from 'lodash';\nimport BookingCalendar from 'react-booking-calendar';\nimport { CalendarWrapper, Container } from './hausboot-rot.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HausbootRot = () => {\n  _s();\n\n  const [startDate, setStartDate] = useState([]);\n  const [endDate, setEndDate] = useState([]);\n\n  const getDaysArray = function (start, end) {\n    for (var arr = [], dt = new Date(start); dt <= end; dt.setDate(dt.getDate() + 1)) {\n      arr.push(new Date(dt));\n    }\n\n    return arr;\n  };\n\n  const dayslist = getDaysArray(new Date(startDate[1]), new Date(endDate[1])); // const dayslist2 = getDaysArray(new Date(startDate[0]), new Date(endDate[0]));\n  // const array = dayslist.concat(dayslist2);\n\n  const getAllDates = () => {\n    var arr = [];\n\n    for (var i = 0; i < startDate.length; i++) {\n      // var arrays = getDaysArray(new Date(startDate[i], new Date(endDate[i])));\n      let array1 = getDaysArray(new Date(startDate[i]), new Date(endDate[i]));\n      arr.push(array1.map(value => value));\n    }\n\n    return arr;\n  };\n\n  const AllDates = getAllDates();\n\n  const mergeDedupe = arr => {\n    return [...new Set([].concat(...arr))];\n  };\n\n  useEffect(() => {\n    const fetchData = () => {\n      getEvents(events => setStartDate(events.map(event => event.start)));\n      getEvents(events => setEndDate(events.map(event => event.end)));\n    };\n\n    fetchData();\n  }, []); // const bookings = startDate.map((value) => new Date(value));\n  // const end = endDate.map((value) => value);\n  // const dates = Object.assign(bookings, end);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(CalendarWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(BookingCalendar, {\n          bookings: dayslist,\n          disableHistory: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Test: \", console.log(mergeDedupe(AllDates))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 3\n  }, this);\n};\n\n_s(HausbootRot, \"eNEU1ObWOFD5s0Wwwhd+B8XJsFc=\");\n\n_c = HausbootRot;\nexport default HausbootRot;\n\nvar _c;\n\n$RefreshReg$(_c, \"HausbootRot\");","map":{"version":3,"sources":["/Users/djsicrip/Documents/WorkSpace/hausboot/client/src/pages/hausboot-rot/hausboot-rot.component.js"],"names":["React","useState","useEffect","getEvents","_","BookingCalendar","CalendarWrapper","Container","HausbootRot","startDate","setStartDate","endDate","setEndDate","getDaysArray","start","end","arr","dt","Date","setDate","getDate","push","dayslist","getAllDates","i","length","array1","map","value","AllDates","mergeDedupe","Set","concat","fetchData","events","event","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getEvents } from '../../fetch';\nimport _ from 'lodash';\n\nimport BookingCalendar from 'react-booking-calendar';\nimport { CalendarWrapper, Container } from './hausboot-rot.styles';\n\nconst HausbootRot = () => {\n\tconst [startDate, setStartDate] = useState([]);\n\tconst [endDate, setEndDate] = useState([]);\n\n\tconst getDaysArray = function (start, end) {\n\t\tfor (var arr = [], dt = new Date(start); dt <= end; dt.setDate(dt.getDate() + 1)) {\n\t\t\tarr.push(new Date(dt));\n\t\t}\n\t\treturn arr;\n\t};\n\tconst dayslist = getDaysArray(new Date(startDate[1]), new Date(endDate[1]));\n\t// const dayslist2 = getDaysArray(new Date(startDate[0]), new Date(endDate[0]));\n\t// const array = dayslist.concat(dayslist2);\n\n\tconst getAllDates = () => {\n\t\tvar arr = [];\n\t\tfor (var i = 0; i < startDate.length; i++) {\n\t\t\t// var arrays = getDaysArray(new Date(startDate[i], new Date(endDate[i])));\n\t\t\tlet array1 = getDaysArray(new Date(startDate[i]), new Date(endDate[i]));\n\t\t\tarr.push(array1.map((value) => value));\n\t\t}\n\t\treturn arr;\n\t};\n\n\tconst AllDates = getAllDates();\n\tconst mergeDedupe = (arr) => {\n\t\treturn [...new Set([].concat(...arr))];\n\t};\n\tuseEffect(() => {\n\t\tconst fetchData = () => {\n\t\t\tgetEvents((events) => setStartDate(events.map((event) => event.start)));\n\t\t\tgetEvents((events) => setEndDate(events.map((event) => event.end)));\n\t\t};\n\n\t\tfetchData();\n\t}, []);\n\n\t// const bookings = startDate.map((value) => new Date(value));\n\t// const end = endDate.map((value) => value);\n\t// const dates = Object.assign(bookings, end);\n\n\treturn (\n\t\t<div>\n\t\t\t<Container>\n\t\t\t\t<CalendarWrapper>\n\t\t\t\t\t<BookingCalendar bookings={dayslist} disableHistory />\n\t\t\t\t\t<div>\n\t\t\t\t\t\tTest: {console.log(mergeDedupe(AllDates))}\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// endDate.map((value) => console.log(value))\n\t\t\t\t\t\t\t// getEvents((events) => events.map((event) => console.log(event.start)))\n\t\t\t\t\t\t\t// console.log(dayslist)\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</CalendarWrapper>\n\t\t\t</Container>\n\t\t</div>\n\t);\n};\n\nexport default HausbootRot;\n"]},"metadata":{},"sourceType":"module"}