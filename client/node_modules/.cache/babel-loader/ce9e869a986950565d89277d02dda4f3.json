{"ast":null,"code":"var _jsxFileName = \"/Users/sfritsch09/Documents/WorkSpace/hausboot/client/src/components/review/card.component.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport { motion } from 'framer-motion';\nimport { LayoutContainer } from './card.styles';\nimport e from 'express';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cards = [1, 2, 3, 4];\n\nconst LayoutCards = () => {\n  _s();\n\n  const [selectedId, setSelectedId] = useState(null);\n  const [canDrag, setCanDrag] = useState(false);\n  const containerRefs = useRef([]);\n\n  const handlePanEnd = (e, info, card) => {\n    if (selectedId) {\n      if (Math.abs(info.offset.x) < 5) {\n        const styles = getComputedStyle(containerRefs.current[card]);\n        const timeout = styles.transform.split(',')[4] * -0.6;\n        setCanDrag(false);\n        setTimeout(() => {\n          setSelectedId(null);\n        }, timeout);\n      }\n    } else {\n      setCanDrag(true);\n      setSelectedId(card);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '100px 50px',\n      height: '200px'\n    },\n    children: /*#__PURE__*/_jsxDEV(LayoutContainer, {\n      children: [cards.map((card, i) => /*#__PURE__*/_jsxDEV(motion.div, {\n        className: selectedId === card ? 'opened-card' : 'card',\n        layout: true,\n        drag: selectedId === card ? 'x' : false,\n        dragConstraints: {\n          left: canDrag ? -850 : 0,\n          right: 0\n        },\n        dragElastic: 0.2,\n        onPanEnd: (e, info) => {\n          handlePanEnd(e, info, card);\n          console.log(e);\n        },\n        ref: el => containerRefs.current[card] = el // onClick={() => {\n        // \tsetSelectedId(card);\n        // }}\n        ,\n        children: selectedId === card && /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            onClickCapture: () => {\n              setSelectedId(null);\n            },\n            onBlurCapture: () => setSelectedId(null)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 8\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 6\n      }, this)), /*#__PURE__*/_jsxDEV(motion.div, {\n        className: \"dim-layer\",\n        animate: {\n          opacity: selectedId ? 0.3 : 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 3\n  }, this);\n};\n\n_s(LayoutCards, \"3oLrOVpJhOIGctpIVSyQ7y61kDQ=\");\n\n_c = LayoutCards;\nexport default LayoutCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"LayoutCards\");","map":{"version":3,"sources":["/Users/sfritsch09/Documents/WorkSpace/hausboot/client/src/components/review/card.component.js"],"names":["React","useState","useRef","motion","LayoutContainer","e","cards","LayoutCards","selectedId","setSelectedId","canDrag","setCanDrag","containerRefs","handlePanEnd","info","card","Math","abs","offset","x","styles","getComputedStyle","current","timeout","transform","split","setTimeout","padding","height","map","i","left","right","console","log","el","opacity"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\nimport { motion } from 'framer-motion';\nimport { LayoutContainer } from './card.styles';\nimport e from 'express';\n\nconst cards = [1, 2, 3, 4];\n\nconst LayoutCards = () => {\n\tconst [selectedId, setSelectedId] = useState(null);\n\n\tconst [canDrag, setCanDrag] = useState(false);\n\tconst containerRefs = useRef([]);\n\tconst handlePanEnd = (e, info, card) => {\n\t\tif (selectedId) {\n\t\t\tif (Math.abs(info.offset.x) < 5) {\n\t\t\t\tconst styles = getComputedStyle(containerRefs.current[card]);\n\t\t\t\tconst timeout = styles.transform.split(',')[4] * -0.6;\n\t\t\t\tsetCanDrag(false);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tsetSelectedId(null);\n\t\t\t\t}, timeout);\n\t\t\t}\n\t\t} else {\n\t\t\tsetCanDrag(true);\n\t\t\tsetSelectedId(card);\n\t\t}\n\t};\n\treturn (\n\t\t<div style={{ padding: '100px 50px', height: '200px' }}>\n\t\t\t<LayoutContainer>\n\t\t\t\t{cards.map((card, i) => (\n\t\t\t\t\t<motion.div\n\t\t\t\t\t\tclassName={selectedId === card ? 'opened-card' : 'card'}\n\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\tlayout\n\t\t\t\t\t\tdrag={selectedId === card ? 'x' : false}\n\t\t\t\t\t\tdragConstraints={{ left: canDrag ? -850 : 0, right: 0 }}\n\t\t\t\t\t\tdragElastic={0.2}\n\t\t\t\t\t\tonPanEnd={(e, info) => {\n\t\t\t\t\t\t\thandlePanEnd(e, info, card);\n\t\t\t\t\t\t\tconsole.log(e);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tref={(el) => (containerRefs.current[card] = el)}\n\t\t\t\t\t\t// onClick={() => {\n\t\t\t\t\t\t// \tsetSelectedId(card);\n\t\t\t\t\t\t// }}\n\t\t\t\t\t>\n\t\t\t\t\t\t{selectedId === card && (\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tonClickCapture={() => {\n\t\t\t\t\t\t\t\t\t\tsetSelectedId(null);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tonBlurCapture={() => setSelectedId(null)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</motion.div>\n\t\t\t\t))}\n\t\t\t\t<motion.div className=\"dim-layer\" animate={{ opacity: selectedId ? 0.3 : 0 }} />\n\t\t\t</LayoutContainer>\n\t\t</div>\n\t);\n};\nexport default LayoutCards;\n"]},"metadata":{},"sourceType":"module"}