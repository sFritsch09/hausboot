{"ast":null,"code":"var _jsxFileName = \"/Users/djsicrip/Documents/WorkSpace/hausboot/client/src/pages/hausboot-rot/hausboot-rot.component.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { getEvents } from '../../fetch';\nimport BookingCalendar from 'react-booking-calendar';\nimport BookingForm from '../../components/form/booking-form.component';\nimport { CalendarWrapper, BookingContainer, InfoContainer, InfoWrapper, CalendarLegend, BoatIcon, PriceListContainer, PriceListWrapper, PriceListItem, PriceListSeason, PriceListHeader } from './hausboot-rot.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HausbootRot = () => {\n  _s();\n\n  const [startDate, setStartDate] = useState([]);\n  const [endDate, setEndDate] = useState([]); // get the range between start and end date\n\n  const getDaysArray = function (start, end) {\n    for (var arr = [], dt = new Date(start); dt <= end - 1; dt.setDate(dt.getDate() + 1)) {\n      arr.push(new Date(dt));\n    }\n\n    return arr;\n  };\n\n  const getAllDates = () => {\n    var arr = [];\n\n    for (var i in startDate) {\n      let dateRange = getDaysArray(new Date(startDate[i]), new Date(endDate[i]));\n      arr.push(dateRange.map(date => date));\n    }\n\n    return arr;\n  };\n\n  const AllDates = getAllDates(); //merge arrays in one array\n\n  const mergeDedupe = arr => {\n    return [...new Set([].concat(...arr))];\n  };\n\n  useEffect(() => {\n    const fetchData = () => {\n      getEvents(events => setStartDate(events.map(event => event.start))); //fetch start date\n\n      getEvents(events => setEndDate(events.map(event => event.end))); //fetch end date\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(InfoContainer, {\n      children: /*#__PURE__*/_jsxDEV(InfoWrapper, {\n        children: \"Information...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(PriceListContainer, {\n      children: /*#__PURE__*/_jsxDEV(PriceListWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(PriceListItem, {\n          children: [/*#__PURE__*/_jsxDEV(PriceListHeader, {\n            children: \"Preise\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"week\",\n            children: [\"Tagespreis\", /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"week-sub\",\n              children: \"Tagespreis ab 10:30 Uhr bis n\\xE4chsten Tag 10:00 Uhr\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"item\",\n              children: \"Montag bis Donnerstag\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"item\",\n              children: \"Freitag bis Sonntag\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"week\",\n            children: [\"Wochenendpreis\", /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"week-sub\",\n              children: \"Wochenendpreis ab 10:30 Uhr bis n\\xE4chsten Tag 10:00 Uhr\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"week-sub\",\n              children: \"1 Woche ab 15 Uhr bis n\\xE4chste Woche 10:00 Uhr\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"item\",\n              children: \"Freitag bis Sonntag\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"item\",\n              children: \"1 Woche von Samstag bis Samstag\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"week\",\n            children: [\"Zusatzkosten\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"item\",\n              children: \"Benzin nach Verbrauch 1,90 Euro/Liter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(PriceListSeason, {\n          children: [/*#__PURE__*/_jsxDEV(PriceListHeader, {\n            children: [\"Nebensaison\", /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"week-sub\",\n              children: \"27.03.2021 - 29.052021 und 26.09.2021 - 20.05.2022 (ohne Himmelfahrt)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 7\n          }, this), \"NebenSeason\", /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"total\",\n            children: \"GesamtPreis 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(PriceListSeason, {\n          children: [/*#__PURE__*/_jsxDEV(PriceListHeader, {\n            children: [\"Hauptsaison\", /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"week-sub\",\n              children: \"22.05. 2021 - 25.09.2021 und 21.05.2022 - 03.09.2022\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 7\n          }, this), \"HaupSeason\", /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"total\",\n            children: \"GesamtPreis 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(BookingContainer, {\n      children: /*#__PURE__*/_jsxDEV(CalendarWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(CalendarLegend, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"free\",\n            children: \"Frei\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"booked\",\n            children: \"Belegt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(BookingCalendar, {\n          bookings: mergeDedupe(AllDates),\n          disableHistory: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(BookingForm, {\n      hausboot: \"Rot\",\n      booked: mergeDedupe(AllDates)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 3\n  }, this);\n};\n\n_s(HausbootRot, \"eNEU1ObWOFD5s0Wwwhd+B8XJsFc=\");\n\n_c = HausbootRot;\nexport default HausbootRot;\n\nvar _c;\n\n$RefreshReg$(_c, \"HausbootRot\");","map":{"version":3,"sources":["/Users/djsicrip/Documents/WorkSpace/hausboot/client/src/pages/hausboot-rot/hausboot-rot.component.js"],"names":["React","useState","useEffect","getEvents","BookingCalendar","BookingForm","CalendarWrapper","BookingContainer","InfoContainer","InfoWrapper","CalendarLegend","BoatIcon","PriceListContainer","PriceListWrapper","PriceListItem","PriceListSeason","PriceListHeader","HausbootRot","startDate","setStartDate","endDate","setEndDate","getDaysArray","start","end","arr","dt","Date","setDate","getDate","push","getAllDates","i","dateRange","map","date","AllDates","mergeDedupe","Set","concat","fetchData","events","event"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getEvents } from '../../fetch';\n\nimport BookingCalendar from 'react-booking-calendar';\nimport BookingForm from '../../components/form/booking-form.component';\nimport {\n\tCalendarWrapper,\n\tBookingContainer,\n\tInfoContainer,\n\tInfoWrapper,\n\tCalendarLegend,\n\tBoatIcon,\n\tPriceListContainer,\n\tPriceListWrapper,\n\tPriceListItem,\n\tPriceListSeason,\n\tPriceListHeader,\n} from './hausboot-rot.styles';\n\nconst HausbootRot = () => {\n\tconst [startDate, setStartDate] = useState([]);\n\tconst [endDate, setEndDate] = useState([]);\n\n\t// get the range between start and end date\n\tconst getDaysArray = function (start, end) {\n\t\tfor (var arr = [], dt = new Date(start); dt <= end - 1; dt.setDate(dt.getDate() + 1)) {\n\t\t\tarr.push(new Date(dt));\n\t\t}\n\t\treturn arr;\n\t};\n\n\tconst getAllDates = () => {\n\t\tvar arr = [];\n\t\tfor (var i in startDate) {\n\t\t\tlet dateRange = getDaysArray(new Date(startDate[i]), new Date(endDate[i]));\n\t\t\tarr.push(dateRange.map((date) => date));\n\t\t}\n\t\treturn arr;\n\t};\n\n\tconst AllDates = getAllDates();\n\n\t//merge arrays in one array\n\tconst mergeDedupe = (arr) => {\n\t\treturn [...new Set([].concat(...arr))];\n\t};\n\n\tuseEffect(() => {\n\t\tconst fetchData = () => {\n\t\t\tgetEvents((events) => setStartDate(events.map((event) => event.start))); //fetch start date\n\t\t\tgetEvents((events) => setEndDate(events.map((event) => event.end))); //fetch end date\n\t\t};\n\n\t\tfetchData();\n\t}, []);\n\n\treturn (\n\t\t<div>\n\t\t\t<InfoContainer>\n\t\t\t\t<InfoWrapper>Information...</InfoWrapper>\n\t\t\t</InfoContainer>\n\t\t\t<PriceListContainer>\n\t\t\t\t<PriceListWrapper>\n\t\t\t\t\t<PriceListItem>\n\t\t\t\t\t\t<PriceListHeader>Preise</PriceListHeader>\n\t\t\t\t\t\t<div className=\"week\">\n\t\t\t\t\t\t\tTagespreis\n\t\t\t\t\t\t\t<p className=\"week-sub\">Tagespreis ab 10:30 Uhr bis nächsten Tag 10:00 Uhr</p>\n\t\t\t\t\t\t\t<span className=\"item\">Montag bis Donnerstag</span>\n\t\t\t\t\t\t\t<span className=\"item\">Freitag bis Sonntag</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"week\">\n\t\t\t\t\t\t\tWochenendpreis\n\t\t\t\t\t\t\t<p className=\"week-sub\">Wochenendpreis ab 10:30 Uhr bis nächsten Tag 10:00 Uhr</p>\n\t\t\t\t\t\t\t<p className=\"week-sub\">1 Woche ab 15 Uhr bis nächste Woche 10:00 Uhr</p>\n\t\t\t\t\t\t\t<span className=\"item\">Freitag bis Sonntag</span>\n\t\t\t\t\t\t\t<span className=\"item\">1 Woche von Samstag bis Samstag</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"week\">\n\t\t\t\t\t\t\tZusatzkosten\n\t\t\t\t\t\t\t<span className=\"item\">Benzin nach Verbrauch 1,90 Euro/Liter</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</PriceListItem>\n\t\t\t\t\t<PriceListSeason>\n\t\t\t\t\t\t<PriceListHeader>\n\t\t\t\t\t\t\tNebensaison\n\t\t\t\t\t\t\t<p className=\"week-sub\">\n\t\t\t\t\t\t\t\t27.03.2021 - 29.052021 und 26.09.2021 - 20.05.2022 (ohne Himmelfahrt)\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</PriceListHeader>\n\t\t\t\t\t\tNebenSeason\n\t\t\t\t\t\t<h3 className=\"total\">GesamtPreis 1</h3>\n\t\t\t\t\t</PriceListSeason>\n\t\t\t\t\t<PriceListSeason>\n\t\t\t\t\t\t<PriceListHeader>\n\t\t\t\t\t\t\tHauptsaison\n\t\t\t\t\t\t\t<p className=\"week-sub\">22.05. 2021 - 25.09.2021 und 21.05.2022 - 03.09.2022</p>\n\t\t\t\t\t\t</PriceListHeader>\n\t\t\t\t\t\tHaupSeason\n\t\t\t\t\t\t<h3 className=\"total\">GesamtPreis 2</h3>\n\t\t\t\t\t</PriceListSeason>\n\t\t\t\t</PriceListWrapper>\n\t\t\t</PriceListContainer>\n\t\t\t<BookingContainer>\n\t\t\t\t<CalendarWrapper>\n\t\t\t\t\t<CalendarLegend>\n\t\t\t\t\t\t<div className=\"free\">Frei</div>\n\t\t\t\t\t\t<div className=\"booked\">Belegt</div>\n\t\t\t\t\t</CalendarLegend>\n\t\t\t\t\t<BookingCalendar bookings={mergeDedupe(AllDates)} disableHistory />\n\t\t\t\t\t<div></div>\n\t\t\t\t</CalendarWrapper>\n\t\t\t</BookingContainer>\n\t\t\t<BookingForm hausboot=\"Rot\" booked={mergeDedupe(AllDates)} />\n\t\t</div>\n\t);\n};\n\nexport default HausbootRot;\n"]},"metadata":{},"sourceType":"module"}