{"ast":null,"code":"var _jsxFileName = \"/Users/djsicrip/Documents/WorkSpace/hausboot/client/src/components/form/forms-ui/select.component.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { MenuItem, FormLabel } from '@material-ui/core';\nimport { useField, useFormikContext } from 'formik';\nimport { makeStyles, createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport Select from '@material-ui/core/Select';\nimport { GroupContainer, StyledErrorMessage } from './forms-ui.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SelectWrapper = ({\n  name,\n  options,\n  label,\n  ...otherProps\n}) => {\n  _s();\n\n  const {\n    setFieldValue\n  } = useFormikContext();\n  const [field, meta] = useField(name);\n\n  const handleChange = evt => {\n    const {\n      value\n    } = evt.target;\n    setFieldValue(name, value);\n  };\n\n  const theme = createMuiTheme({\n    overrides: {\n      MuiPaper: {\n        root: {\n          color: 'green'\n        }\n      }\n    }\n  });\n  const useStyles = makeStyles(theme => ({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2)\n    },\n    root: {\n      backgroundColor: 'red'\n    },\n    list: {\n      backgroundColor: '#424242',\n      color: 'white'\n    }\n  }));\n  const classes = useStyles();\n  const configSelect = { ...field,\n    ...otherProps,\n    select: true,\n    variant: 'standard',\n    fullWidth: true,\n    onChange: handleChange\n  };\n\n  if (meta && meta.touched && meta.error) {\n    configSelect.error = true;\n    configSelect.helperText = meta.error;\n  }\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(GroupContainer, {\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        component: \"legend\",\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Select, { ...configSelect,\n        MenuProps: {\n          classes: {\n            list: classes.list\n          }\n        },\n        children: options.map((item, pos) => {\n          return /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: item,\n            classes: {\n              list: classes.list\n            },\n            children: options[item]\n          }, pos, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 8\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }, this), meta.touched && meta.error ? /*#__PURE__*/_jsxDEV(StyledErrorMessage, {\n        children: meta.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 35\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 3\n  }, this);\n};\n\n_s(SelectWrapper, \"/baqLa4AjbvB666OJsNBVSL5ArM=\", true, function () {\n  return [useFormikContext, useField];\n});\n\n_c = SelectWrapper;\nexport default SelectWrapper;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectWrapper\");","map":{"version":3,"sources":["/Users/djsicrip/Documents/WorkSpace/hausboot/client/src/components/form/forms-ui/select.component.js"],"names":["React","MenuItem","FormLabel","useField","useFormikContext","makeStyles","createMuiTheme","ThemeProvider","Select","GroupContainer","StyledErrorMessage","SelectWrapper","name","options","label","otherProps","setFieldValue","field","meta","handleChange","evt","value","target","theme","overrides","MuiPaper","root","color","useStyles","formControl","margin","spacing","minWidth","selectEmpty","marginTop","backgroundColor","list","classes","configSelect","select","variant","fullWidth","onChange","touched","error","helperText","map","item","pos"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { MenuItem, FormLabel } from '@material-ui/core';\nimport { useField, useFormikContext } from 'formik';\nimport { makeStyles, createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport Select from '@material-ui/core/Select';\nimport { GroupContainer, StyledErrorMessage } from './forms-ui.styles';\n\nconst SelectWrapper = ({ name, options, label, ...otherProps }) => {\n\tconst { setFieldValue } = useFormikContext();\n\tconst [field, meta] = useField(name);\n\n\tconst handleChange = (evt) => {\n\t\tconst { value } = evt.target;\n\t\tsetFieldValue(name, value);\n\t};\n\tconst theme = createMuiTheme({\n\t\toverrides: {\n\t\t\tMuiPaper: {\n\t\t\t\troot: {\n\t\t\t\t\tcolor: 'green',\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t});\n\n\tconst useStyles = makeStyles((theme) => ({\n\t\tformControl: {\n\t\t\tmargin: theme.spacing(1),\n\t\t\tminWidth: 120,\n\t\t},\n\t\tselectEmpty: {\n\t\t\tmarginTop: theme.spacing(2),\n\t\t},\n\t\troot: {\n\t\t\tbackgroundColor: 'red',\n\t\t},\n\t\tlist: {\n\t\t\tbackgroundColor: '#424242',\n\t\t\tcolor: 'white',\n\t\t},\n\t}));\n\tconst classes = useStyles();\n\tconst configSelect = {\n\t\t...field,\n\t\t...otherProps,\n\t\tselect: true,\n\t\tvariant: 'standard',\n\t\tfullWidth: true,\n\t\tonChange: handleChange,\n\t};\n\tif (meta && meta.touched && meta.error) {\n\t\tconfigSelect.error = true;\n\t\tconfigSelect.helperText = meta.error;\n\t}\n\treturn (\n\t\t<ThemeProvider theme={theme}>\n\t\t\t<GroupContainer>\n\t\t\t\t<FormLabel component=\"legend\">{label}</FormLabel>\n\t\t\t\t<Select {...configSelect} MenuProps={{ classes: { list: classes.list } }}>\n\t\t\t\t\t{options.map((item, pos) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\t\tkey={pos}\n\t\t\t\t\t\t\t\tvalue={item}\n\t\t\t\t\t\t\t\tclasses={{\n\t\t\t\t\t\t\t\t\tlist: classes.list,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{options[item]}\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</Select>\n\t\t\t\t{meta.touched && meta.error ? <StyledErrorMessage>{meta.error}</StyledErrorMessage> : null}\n\t\t\t</GroupContainer>\n\t\t</ThemeProvider>\n\t);\n};\n\nexport default SelectWrapper;\n"]},"metadata":{},"sourceType":"module"}